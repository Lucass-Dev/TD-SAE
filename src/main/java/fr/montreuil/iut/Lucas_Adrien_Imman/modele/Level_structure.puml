@startuml

/' diagram meta data start
config=StructureConfiguration;
{
  "projectClassification": {
    "searchMode": "OpenProject", // OpenProject, AllProjects
    "includedProjects": "",
    "pathEndKeywords": "*.impl",
    "isClientPath": "",
    "isClientName": "",
    "isTestPath": "",
    "isTestName": "",
    "isMappingPath": "",
    "isMappingName": "",
    "isDataAccessPath": "",
    "isDataAccessName": "",
    "isDataStructurePath": "",
    "isDataStructureName": "",
    "isInterfaceStructuresPath": "",
    "isInterfaceStructuresName": "",
    "isEntryPointPath": "",
    "isEntryPointName": "",
    "treatFinalFieldsAsMandatory": false
  },
  "graphRestriction": {
    "classPackageExcludeFilter": "",
    "classPackageIncludeFilter": "",
    "classNameExcludeFilter": "LevelVue;PopupVue",
    "classNameIncludeFilter": "",
    "methodNameExcludeFilter": "",
    "methodNameIncludeFilter": "",
    "removeByInheritance": "", // inheritance/annotation based filtering is done in a second step
    "removeByAnnotation": "",
    "removeByClassPackage": "", // cleanup the graph after inheritance/annotation based filtering is done
    "removeByClassName": "",
    "cutMappings": false,
    "cutEnum": true,
    "cutTests": true,
    "cutClient": true,
    "cutDataAccess": false,
    "cutInterfaceStructures": false,
    "cutDataStructures": false,
    "cutGetterAndSetter": true,
    "cutConstructors": true
  },
  "graphTraversal": {
    "forwardDepth": 3,
    "backwardDepth": 3,
    "classPackageExcludeFilter": "",
    "classPackageIncludeFilter": "",
    "classNameExcludeFilter": "",
    "classNameIncludeFilter": "",
    "methodNameExcludeFilter": "",
    "methodNameIncludeFilter": "",
    "hideMappings": false,
    "hideDataStructures": false,
    "hidePrivateMethods": true,
    "hideInterfaceCalls": true, // indirection: implementation -> interface (is hidden) -> implementation
    "onlyShowApplicationEntryPoints": false, // root node is included
    "useMethodCallsForStructureDiagram": "ForwardOnly" // ForwardOnly, BothDirections, No
  },
  "details": {
    "aggregation": "GroupByClass", // ByClass, GroupByClass, None
    "showClassGenericTypes": true,
    "showMethods": true,
    "showMethodParameterNames": true,
    "showMethodParameterTypes": true,
    "showMethodReturnType": true,
    "showPackageLevels": 2,
    "showDetailedClassStructure": true
  },
  "rootClass": "fr.montreuil.iut.Lucas_Adrien_Imman.modele.Level",
  "extensionCallbackMethod": "" // qualified.class.name#methodName - signature: public static String method(String)
}
diagram meta data end '/



digraph g {
    rankdir="TB"
    splines=polyline
    

'nodes 
subgraph cluster_1290044579 { 
   	label=montreuil
	labeljust=l
	fillcolor="#ececec"
	style=filled
   
   subgraph cluster_2015037111 { 
   	label=iut
	labeljust=l
	fillcolor="#d8d8d8"
	style=filled
   
   Archive1640600557[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)Archive</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ die()</TD></TR>
<TR><TD ALIGN="LEFT" >+ doDamage()</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

CCleaner708424623[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)CCleaner</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

Demineur708424623[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)Demineur</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

DotExe1640600557[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)DotExe</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ die()</TD></TR>
<TR><TD ALIGN="LEFT" >+ doDamage()</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

DotSH1640600557[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)DotSH</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ die()</TD></TR>
<TR><TD ALIGN="LEFT" >+ doDamage()</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

Ennemy1640600557[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)Ennemy</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   damage: int [1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   direction: int [1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   dropRate: int [1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   id: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   initialSpeed: int [1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   level: Level [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   levelPane: Pane [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   life: SimpleIntegerProperty [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   maxLife: SimpleIntegerProperty [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   name: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >#   player: Player [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   speed: int [1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   spriteIndex: int [1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   x: SimpleIntegerProperty [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   y: SimpleIntegerProperty [0..1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ die()</TD></TR>
<TR><TD ALIGN="LEFT" >+ doDamage()</TD></TR>
<TR><TD ALIGN="LEFT" >+ isTouching(ennemies: ObservableList&lt;Ennemy&gt;): Ennemy</TD></TR>
<TR><TD ALIGN="LEFT" >+ lifeProperty(): SimpleIntegerProperty</TD></TR>
<TR><TD ALIGN="LEFT" >+ maxLifeProperty(): SimpleIntegerProperty</TD></TR>
<TR><TD ALIGN="LEFT" >+ move()</TD></TR>
<TR><TD ALIGN="LEFT" >+ reductionPv(l: int)</TD></TR>
<TR><TD ALIGN="LEFT" >+ resetSpped()</TD></TR>
<TR><TD ALIGN="LEFT" >+ xProperty(): SimpleIntegerProperty</TD></TR>
<TR><TD ALIGN="LEFT" >+ yProperty(): SimpleIntegerProperty</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

InternetExplorer708424623[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)InternetExplorer</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

Kamikaze1640600557[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)Kamikaze</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ die()</TD></TR>
<TR><TD ALIGN="LEFT" >+ doDamage()</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

Level2119094724[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)Level</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   actualWave: ArrayList&lt;Ennemy&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   actualWaveNumber: SimpleIntegerProperty [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   cpt: int [1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   difficulty: int [1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   endTilePos: int[] [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   ennemies: ObservableList&lt;Ennemy&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   ennemiesDansLaZone: ArrayList&lt;Ennemy&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   freezedRamAmount: int [1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   freezingDelay: int [1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   freezingRam: boolean [1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   levelPane: Pane [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   nbActeurs: int [1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   nbTours: int [1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   placedTower: ObservableList&lt;Tower&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   player: Player [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   poisonTicks: int [1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   poisonedAmount: int [1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   poisoning: boolean [1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   poisoningDelay: int [1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   projectiles: ObservableList&lt;Projectile&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   startDirection: int [1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   startFreezingRam: int [1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   startPoisoning: int [1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   startTilePos: int[] [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   tileMap: ArrayList&lt;ArrayList&lt;Integer&gt;&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   travelingMap: ArrayList&lt;ArrayList&lt;Integer&gt;&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   waveSize: int [1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ actualWaveNumberProperty(): SimpleIntegerProperty</TD></TR>
<TR><TD ALIGN="LEFT" >+ addTower(tower: Tower)</TD></TR>
<TR><TD ALIGN="LEFT" >+ applyPoison(amount: int)</TD></TR>
<TR><TD ALIGN="LEFT" >+ bulletTurn()</TD></TR>
<TR><TD ALIGN="LEFT" >+ canPlaceTower(tower: Tower): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ checkProgression(): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ createMap(path: String, pane: Pane): ArrayList&lt;ArrayList&lt;Integer&gt;&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ createWave(size: int)</TD></TR>
<TR><TD ALIGN="LEFT" >+ defreezeRam()</TD></TR>
<TR><TD ALIGN="LEFT" >+ enemiesTurn(nbTours: int): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ flopGain()</TD></TR>
<TR><TD ALIGN="LEFT" >+ freezeRam(amount: int)</TD></TR>
<TR><TD ALIGN="LEFT" >+ getTile(pos: int[]): int</TD></TR>
<TR><TD ALIGN="LEFT" >+ getTileCenter(tilePos: int[]): int[]</TD></TR>
<TR><TD ALIGN="LEFT" >+ getTilePos(x: int, y: int): int[]</TD></TR>
<TR><TD ALIGN="LEFT" >+ getTileValue(pos: int[]): int</TD></TR>
<TR><TD ALIGN="LEFT" >+ getTower(id: String): Tower</TD></TR>
<TR><TD ALIGN="LEFT" >+ placeTower(x: int, y: int, index: int)</TD></TR>
<TR><TD ALIGN="LEFT" >+ poison()</TD></TR>
<TR><TD ALIGN="LEFT" >+ sellTower(t: Tower)</TD></TR>
<TR><TD ALIGN="LEFT" >+ startLevel(nbTours: int)</TD></TR>
<TR><TD ALIGN="LEFT" >+ tileMapToTraveling(tileMap: ArrayList&lt;ArrayList&lt;Integer&gt;&gt;): ArrayList&lt;ArrayList&lt;Integer&gt;&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ towerTurn(nbTours: int)</TD></TR>
<TR><TD ALIGN="LEFT" >+ validTile(pos: int[]): boolean</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

LevelController609233148[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)LevelController</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   LDT: LevelDataTransit [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >#   athHbox: HBox [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   cursorIndex: int [1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   estFini: boolean [1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   gameLoop: Timeline [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >#   h: int [1]</TD></TR>
<TR><TD ALIGN="LEFT" >#   helpPopup: Pane [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   isMovingTower: boolean [1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   level: Level [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >#   levelPane: Pane [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   levelVue: LevelVue [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >#   m: int [1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   movingTower: Tower [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   nbTours: int [1]</TD></TR>
<TR><TD ALIGN="LEFT" >#   playButton: Button [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   player: Player [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >#   s: int [1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   showedTower: Tower [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   temps: int [1]</TD></TR>
<TR><TD ALIGN="LEFT" >#   tilePane: TilePane [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >#   timeLabel: Label [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >#   towerMenu: Pane [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >#   towerShopVbox: VBox [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >#   waveLabel: Label [0..1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ createLevel()</TD></TR>
<TR><TD ALIGN="LEFT" >+ initAnimation()</TD></TR>
<TR><TD ALIGN="LEFT" >+ initialize(url: URL, resourceBundle: ResourceBundle)</TD></TR>
<TR><TD ALIGN="LEFT" >+ moveTowerTo(t: Tower, x: int, y: int)</TD></TR>
<TR><TD ALIGN="LEFT" >+ refreshTimer()</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

NordVPN708424623[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)NordVPN</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

PDFConverter708424623[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)PDFConverter</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

Player2119094724[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)Player</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   flop: IntegerProperty [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   life: IntegerProperty [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   maxRAM: IntegerProperty [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   maxlife: IntegerProperty [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   ram: IntegerProperty [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   username: String [0..1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ flopProperty(): IntegerProperty</TD></TR>
<TR><TD ALIGN="LEFT" >+ lifeProperty(): IntegerProperty</TD></TR>
<TR><TD ALIGN="LEFT" >+ looseLife(l: int)</TD></TR>
<TR><TD ALIGN="LEFT" >+ maxRAMProperty(): IntegerProperty</TD></TR>
<TR><TD ALIGN="LEFT" >+ maxlifeProperty(): IntegerProperty</TD></TR>
<TR><TD ALIGN="LEFT" >+ ramProperty(): IntegerProperty</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

Projectile1689772448[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)Projectile</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   ennemyCible: Ennemy [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   id: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   x: IntegerProperty [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   y: IntegerProperty [0..1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ agitSurLaCible()</TD></TR>
<TR><TD ALIGN="LEFT" >+ cibleAtteint(): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ placement()</TD></TR>
<TR><TD ALIGN="LEFT" >+ xProperty(): IntegerProperty</TD></TR>
<TR><TD ALIGN="LEFT" >+ yProperty(): IntegerProperty</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

ProjectileDegatsBrut1689772448[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)ProjectileDegatsBrut</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ agitSurLaCible()</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

ProjectileDotSH1689772448[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)ProjectileDotSH</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ agitSurLaCible()</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

ProjectileKamikaze1689772448[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)ProjectileKamikaze</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ agitSurLaCible()</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

ProjectileKnockBack1689772448[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)ProjectileKnockBack</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ agitSurLaCible()</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

Scam1640600557[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)Scam</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ die()</TD></TR>
<TR><TD ALIGN="LEFT" >+ doDamage()</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

TaskKiller708424623[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)TaskKiller</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

Tower708424623[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)Tower</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   damage: SimpleIntegerProperty [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   delais: int [1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   ennemieDetecte: ArrayList&lt;Ennemy&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   flopPrice: int [1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   id: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   level: SimpleIntegerProperty [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   movingPrice: SimpleIntegerProperty [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   name: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   ramPrice: int [1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   range: SimpleIntegerProperty [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   reloadSpeed: SimpleIntegerProperty [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   sellingPrice: SimpleIntegerProperty [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   showingRange: SimpleBooleanProperty [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   spriteIndex: int [1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   tilePane: Pane [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   upgradeCost: SimpleIntegerProperty [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   x: SimpleIntegerProperty [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   y: SimpleIntegerProperty [0..1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ damageProperty(): SimpleIntegerProperty</TD></TR>
<TR><TD ALIGN="LEFT" >+ detect(ennemis: ObservableList&lt;Ennemy&gt;): ArrayList&lt;Ennemy&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ levelProperty(): SimpleIntegerProperty</TD></TR>
<TR><TD ALIGN="LEFT" >+ movingPriceProperty(): SimpleIntegerProperty</TD></TR>
<TR><TD ALIGN="LEFT" >+ rangeProperty(): SimpleIntegerProperty</TD></TR>
<TR><TD ALIGN="LEFT" >+ reloadSpeedProperty(): SimpleIntegerProperty</TD></TR>
<TR><TD ALIGN="LEFT" >+ sellingPriceProperty(): SimpleIntegerProperty</TD></TR>
<TR><TD ALIGN="LEFT" >+ showingRangeProperty(): SimpleBooleanProperty</TD></TR>
<TR><TD ALIGN="LEFT" >+ upgrade(p: Player)</TD></TR>
<TR><TD ALIGN="LEFT" >+ upgradeCostProperty(): SimpleIntegerProperty</TD></TR>
<TR><TD ALIGN="LEFT" >+ xProperty(): IntegerProperty</TD></TR>
<TR><TD ALIGN="LEFT" >+ yProperty(): IntegerProperty</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

Virus1640600557[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)Virus</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ die()</TD></TR>
<TR><TD ALIGN="LEFT" >+ doDamage()</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

ZoneElectrique1689772448[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)ZoneElectrique</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ agitSurLaCible()</TD></TR>
<TR><TD ALIGN="LEFT" >+ cibleAtteint(): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ placement()</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

ZoneRalentisseur1689772448[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)ZoneRalentisseur</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ agitSurLaCible()</TD></TR>
<TR><TD ALIGN="LEFT" >+ cibleAtteint(): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ placement()</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];
} 
} 

'edges    
Ennemy1640600557 -> Archive1640600557[arrowhead=none, arrowtail=empty, dir=both];
Ennemy1640600557 -> DotExe1640600557[arrowhead=none, arrowtail=empty, dir=both];
Ennemy1640600557 -> DotSH1640600557[arrowhead=none, arrowtail=empty, dir=both];
Ennemy1640600557 -> Kamikaze1640600557[arrowhead=none, arrowtail=empty, dir=both];
Ennemy1640600557 -> Level2119094724[label="level
[0..1]"];
Ennemy1640600557 -> Scam1640600557[arrowhead=none, arrowtail=empty, dir=both];
Ennemy1640600557 -> Virus1640600557[arrowhead=none, arrowtail=empty, dir=both];
Level2119094724 -> Ennemy1640600557[label="actualWave
[0..*]"];
Level2119094724 -> Ennemy1640600557[label="ennemies
[0..*]"];
Level2119094724 -> Ennemy1640600557[label="ennemiesDansLaZone
[0..*]"];
Level2119094724 -> Player2119094724[label="player
[0..1]"];
Level2119094724 -> Projectile1689772448[label="projectiles
[0..*]"];
Level2119094724 -> Tower708424623[label="placedTower
[0..*]"];
LevelController609233148 -> Level2119094724[label="level
[0..1]"];
LevelController609233148 -> Tower708424623[label="movingTower
[0..1]"];
LevelController609233148 -> Tower708424623[label="showedTower
[0..1]"];
Projectile1689772448 -> Ennemy1640600557[label="ennemyCible
[0..1]"];
Projectile1689772448 -> ProjectileDegatsBrut1689772448[arrowhead=none, arrowtail=empty, dir=both];
Projectile1689772448 -> ProjectileDotSH1689772448[arrowhead=none, arrowtail=empty, dir=both];
Projectile1689772448 -> ProjectileKamikaze1689772448[arrowhead=none, arrowtail=empty, dir=both];
Projectile1689772448 -> ProjectileKnockBack1689772448[arrowhead=none, arrowtail=empty, dir=both];
Projectile1689772448 -> ZoneElectrique1689772448[arrowhead=none, arrowtail=empty, dir=both];
Projectile1689772448 -> ZoneRalentisseur1689772448[arrowhead=none, arrowtail=empty, dir=both];
Tower708424623 -> CCleaner708424623[arrowhead=none, arrowtail=empty, dir=both];
Tower708424623 -> Demineur708424623[arrowhead=none, arrowtail=empty, dir=both];
Tower708424623 -> Ennemy1640600557[label="ennemieDetecte
[0..*]"];
Tower708424623 -> InternetExplorer708424623[arrowhead=none, arrowtail=empty, dir=both];
Tower708424623 -> NordVPN708424623[arrowhead=none, arrowtail=empty, dir=both];
Tower708424623 -> PDFConverter708424623[arrowhead=none, arrowtail=empty, dir=both];
Tower708424623 -> TaskKiller708424623[arrowhead=none, arrowtail=empty, dir=both];
    
}
@enduml